<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Machine Learning on Jason Omedes</title>
    <link>https://jasoromir.github.io/portfolio/blog/machine_learning/</link>
    <description>Recent content in Machine Learning on Jason Omedes</description>
    <generator>Source Themes academia (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>Jason Omedes &amp;copy; {year}</copyright>
    <lastBuildDate>Sun, 09 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="https://jasoromir.github.io/portfolio/blog/machine_learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Classification</title>
      <link>https://jasoromir.github.io/portfolio/blog/machine_learning/classification/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      
      <guid>https://jasoromir.github.io/portfolio/blog/machine_learning/classification/</guid>
      <description>&lt;p&gt;We will first take a look at a simple classification task, in which you are given a set of labeled points and want to use these to classify some unlabeled points. Imagine that we have the data shown in Figure 5-1 (the code used to generate this figure, and all figures in this section, is available in the online appendix).&lt;/p&gt;
&lt;p&gt;INSERT FIGURE&lt;/p&gt;
&lt;p&gt;Here we have two-dimensional data; that is, we have two features for each point, represented
by the (x,y) positions of the points on the plane. In addition, we have one of
two class labels for each point, here represented by the colors of the points. From
these features and labels, we would like to create a model that will let us decide
whether a new point should be labeled “blue” or “red.”
There are a number of possible models for such a classification task, but here we will
use an extremely simple one. We will make the assumption that the two groups can
be separated by drawing a straight line through the plane between them, such that
points on each side of the line fall in the same group. Here the model is a quantitative
version of the statement “a straight line separates the classes,” while the model parameters
are the particular numbers describing the location and orientation of that line
for our data. The optimal values for these model parameters are learned from the
data (this is the “learning” in machine learning), which is often called training the
model.&lt;/p&gt;
&lt;p&gt;INSERT FIGURE&lt;/p&gt;
&lt;p&gt;Now that this model has been trained, it can be generalized to new, unlabeled data. In
other words, we can take a new set of data, draw this model line through it, and
assign labels to the new points based on this model. This stage is usually called prediction.
See Figure 5-3.&lt;/p&gt;
&lt;p&gt;INSERT FIGURE&lt;/p&gt;
&lt;p&gt;This is the basic idea of a classification task in machine learning, where “classification”
indicates that the data has discrete class labels. At first glance this may look
fairly trivial: it would be relatively easy to simply look at this data and draw such a
discriminatory line to accomplish this classification. A benefit of the machine learning
approach, however, is that it can generalize to much larger datasets in many more
dimensions.
For example, this is similar to the task of automated spam detection for email.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Clustering</title>
      <link>https://jasoromir.github.io/portfolio/blog/machine_learning/clustering/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      
      <guid>https://jasoromir.github.io/portfolio/blog/machine_learning/clustering/</guid>
      <description>&lt;p&gt;Work in progress&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dimensionality reduction</title>
      <link>https://jasoromir.github.io/portfolio/blog/machine_learning/dimred/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      
      <guid>https://jasoromir.github.io/portfolio/blog/machine_learning/dimred/</guid>
      <description>&lt;p&gt;Work in progress&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GMM</title>
      <link>https://jasoromir.github.io/portfolio/blog/machine_learning/gmm/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      
      <guid>https://jasoromir.github.io/portfolio/blog/machine_learning/gmm/</guid>
      <description>&lt;p&gt;Work in progress&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jasoromir.github.io/portfolio/blog/machine_learning/#ml-models&#34;&gt;Check other ML models&lt;/a&gt;:
&lt;a href=&#34;https://jasoromir.github.io/portfolio/blog/machine_learning/svm&#34;&gt;SVM&lt;/a&gt;, &lt;a href=&#34;https://jasoromir.github.io/portfolio/blog/machine_learning/gmm&#34;&gt;GMM&lt;/a&gt;,&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Regression</title>
      <link>https://jasoromir.github.io/portfolio/blog/machine_learning/regression/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      
      <guid>https://jasoromir.github.io/portfolio/blog/machine_learning/regression/</guid>
      <description>&lt;p&gt;In contrast with the discrete labels of a classification algorithm, we will next look at a
simple regression task in which the labels are continuous quantities.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SVM</title>
      <link>https://jasoromir.github.io/portfolio/blog/machine_learning/svm/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      
      <guid>https://jasoromir.github.io/portfolio/blog/machine_learning/svm/</guid>
      <description>&lt;p&gt;Work in progress&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jasoromir.github.io/portfolio/blog/machine_learning/#ml-models&#34;&gt;Check other ML models&lt;/a&gt;:
&lt;a href=&#34;https://jasoromir.github.io/portfolio/blog/machine_learning/svm&#34;&gt;SVM&lt;/a&gt;,
&lt;a href=&#34;https://jasoromir.github.io/portfolio/blog/machine_learning/gmm&#34;&gt;GMM&lt;/a&gt;,&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
